@model WebMVC.ViewModels.CreateUpdateProductViewModel

@{
    ViewBag.Title = "Thêm mới sản phẩm";
}

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@ViewBag.Title</h3>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <div class="text-left m-auto">
                        @if (TempData["error"] != null && !string.IsNullOrEmpty(TempData["error"].ToString()))
                        {
                            <div class="alert alert-danger alert-dismissible">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong>@TempData["error"]</strong>
                            </div>
                        }
                    </div>
                </div>
                <form method="post" class="" action="@Url.Action("CreateProduct", "Admin")" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="control-label">Loại sản phẩm</label>                   
                        @Html.DropDownList("ProductCategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.PostedFile)

                        @Html.TextBoxFor(x => x.PostedFile, new { type = "file", @class = "form-control", accept = "image/*" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Description)
                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = "3" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Lưu" class="btn btn-primary btn-block" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-3"> </div>
</div>




